firstday_most <- firstday_most[1:10, ]
ggplot(firstday_most, aes(hashtags, prop_tweets)) +
geom_col() +
xlab("Hashtag") +
ylab("Proportion of tweets") +
theme(axis.text.x = element_text(angle = -45, hjust = -.05))
secondday_group <- seconddayhash_data %>%
group_by(hashtags) %>%
summarise(prop_tweets = n() / nrow(firstdayhash_data), n_tweets = n()) %>%
filter(!(hashtags %in% c("harryandmeghanonoprah", "meghanandharryonoprah", "oprahmeghanharry")))
secondday_group <- secondday_group %>%
filter(!grepl("harry", secondday_group$hashtags))
secondday_group <- secondday_group %>%
filter(!grepl("meghan", secondday_group$hashtags))
secondday_group <- secondday_group %>%
filter(!grepl("oprah", secondday_group$hashtags))
## top 10 hashtags
secondday_most <- secondday_group %>%
arrange(desc(prop_tweets)) %>%
mutate(hashtags = factor(hashtags, levels = hashtags))
ggplot(secondday_most, aes(hashtags, prop_tweets)) +
geom_col() +
xlab("Hashtag") +
ylab("Proportion of tweets") +
theme(axis.text.x = element_text(angle = -45, hjust = -.05))
secondday_most <- secondday_most[1:10, ]
ggplot(secondday_most, aes(hashtags, prop_tweets)) +
geom_col() +
xlab("Hashtag") +
ylab("Proportion of tweets") +
theme(axis.text.x = element_text(angle = -45, hjust = -.05))
thirdday_group <- thirddayhash_data %>%
group_by(hashtags) %>%
summarise(prop_tweets = n() / nrow(firstdayhash_data), n_tweets = n()) %>%
filter(!(hashtags %in% c("harryandmeghanonoprah", "meghanandharryonoprah", "oprahmeghanharry")))
thirdday_group <- thirdday_group %>%
filter(!grepl("harry", thirdday_group$hashtags))
thirdday_group <- thirdday_group %>%
filter(!grepl("meghan", thirdday_group$hashtags))
thirdday_group <- thirdday_group %>%
filter(!grepl("oprah", thirdday_group$hashtags))
## top 10 hashtags
thirdday_most <- thirdday_group %>%
arrange(desc(prop_tweets)) %>%
mutate(hashtags = factor(hashtags, levels = hashtags))
thirdday_most <- thirdday_most[1:10, ]
ggplot(thirdday_most, aes(hashtags, prop_tweets)) +
geom_col() +
xlab("Hashtag") +
ylab("Proportion of tweets") +
theme(axis.text.x = element_text(angle = -45, hjust = -.05))
fourthday_group <- fourthdayhash_data %>%
group_by(hashtags) %>%
summarise(prop_tweets = n() / nrow(firstdayhash_data), n_tweets = n()) %>%
filter(!(hashtags %in% c("harryandmeghanonoprah", "meghanandharryonoprah", "oprahmeghanharry")))
fourthday_group <- fourthday_group %>%
filter(!grepl("harry", fourthday_group$hashtags))
fourthday_group <- fourthday_group %>%
filter(!grepl("meghan", fourthday_group$hashtags))
fourthday_group <- fourthday_group %>%
filter(!grepl("oprah", fourthday_group$hashtags))
## top 10 hashtags
fourthday_most <- fourthday_group %>%
arrange(desc(prop_tweets)) %>%
mutate(hashtags = factor(hashtags, levels = hashtags))
fourthday_most <- fourthday_most[1:10, ]
ggplot(fourthday_most, aes(hashtags, prop_tweets)) +
geom_col() +
xlab("Hashtag") +
ylab("Proportion of tweets") +
theme(axis.text.x = element_text(angle = -45, hjust = -.05))
fifthday_group <- fifthdayhash_data %>%
group_by(hashtags) %>%
summarise(prop_tweets = n() / nrow(firstdayhash_data), n_tweets = n()) %>%
filter(!(hashtags %in% c("harryandmeghanonoprah", "meghanandharryonoprah", "oprahmeghanharry")))
fifthday_group <- fifthday_group %>%
filter(!grepl("harry", fifthday_group$hashtags))
fifthday_group <- fifthday_group %>%
filter(!grepl("meghan", fifthday_group$hashtags))
fifthday_group <- fifthday_group %>%
filter(!grepl("oprah", fifthday_group$hashtags))
## top 10 hashtags
fifthday_most <- fifthday_group %>%
arrange(desc(prop_tweets)) %>%
mutate(hashtags = factor(hashtags, levels = hashtags))
fifthday_most <- fifthday_most[1:10, ]
ggplot(fifthday_most, aes(hashtags, prop_tweets)) +
geom_col() +
xlab("Hashtag") +
ylab("Proportion of tweets") +
theme(axis.text.x = element_text(angle = -45, hjust = -.05))
sixthday_group <- sixthdayhash_data %>%
group_by(hashtags) %>%
summarise(prop_tweets = n() / nrow(firstdayhash_data), n_tweets = n()) %>%
filter(!(hashtags %in% c("harryandmeghanonoprah", "meghanandharryonoprah", "oprahmeghanharry")))
sixthday_group <- sixthday_group %>%
filter(!grepl("harry", sixthday_group$hashtags))
sixthday_group <- sixthday_group %>%
filter(!grepl("meghan", sixthday_group$hashtags))
sixthday_group <- sixthday_group %>%
filter(!grepl("oprah", sixthday_group$hashtags))
## top 10 hashtags
sixthday_most <- sixthday_group %>%
arrange(desc(prop_tweets)) %>%
mutate(hashtags = factor(hashtags, levels = hashtags))
sixthday_most <- sixthday_most[1:10, ]
ggplot(sixthday_most, aes(hashtags, prop_tweets)) +
geom_col() +
xlab("Hashtag") +
ylab("Proportion of tweets") +
theme(axis.text.x = element_text(angle = -45, hjust = -.05))
seventhday_group <- seventhdayhash_data %>%
group_by(hashtags) %>%
summarise(prop_tweets = n() / nrow(firstdayhash_data), n_tweets = n()) %>%
filter(!(hashtags %in% c("harryandmeghanonoprah", "meghanandharryonoprah", "oprahmeghanharry")))
seventhday_group <- seventhday_group %>%
filter(!grepl("harry", seventhday_group$hashtags))
seventhday_group <- seventhday_group %>%
filter(!grepl("meghan", seventhday_group$hashtags))
seventhday_group <- seventhday_group %>%
filter(!grepl("oprah", seventhday_group$hashtags))
## top 10 hashtags
seventhday_most <- seventhday_group %>%
arrange(desc(prop_tweets)) %>%
mutate(hashtags = factor(hashtags, levels = hashtags))
seventhday_most <- seventhday_most[1:10, ]
ggplot(seventhday_most, aes(hashtags, prop_tweets)) +
geom_col() +
xlab("Hashtag") +
ylab("Proportion of tweets") +
theme(axis.text.x = element_text(angle = -45, hjust = -.05))
View(seventhday_most)
seventhday_most <- seventhday_most %>%
mutate(Day = 7)
View(seventhday_most)
## add a column to each dataset indicating which day it is
seventhday_most2 <- seventhday_most %>%
mutate(Day = 7)
sixthday_most2 <- sixthday_most %>%
mutate(Day = 6)
fifthday_most2 <- fifthday_most %>%
mutate(Day = 5)
fourthday_most2 <- fourthday_most %>%
mutate(Day = 4)
thirdday_most2 <- thirdday_most %>%
mutate(Day = 3)
secondday_most2 <- secondday_most %>%
mutate(Day = 2)
firstday_most2 <- firstday_most %>%
mutate(Day = 6)
firstday_most2 <- firstday_most %>%
mutate(Day = 1)
alldays_most <- rbind(firstday_most2, secondday_most2, thirdday_most2, fourthday_most2, fifthday_most2, sixthday_most2, seventhday_most2)
ggplot(alldays_most, aes(hashtags, prop_tweets)) +
geom_col(aes(col = Day)) +
xlab("Hashtag") +
ylab("Proportion of tweets") +
theme(axis.text.x = element_text(angle = -45, hjust = -.05))
ggplot(alldays_most, aes(hashtags, prop_tweets)) +
geom_col(aes(col = Day, position = "dodge")) +
xlab("Hashtag") +
ylab("Proportion of tweets") +
theme(axis.text.x = element_text(angle = -45, hjust = -.05))
ggplot(alldays_most, aes(hashtags, prop_tweets)) +
geom_col(aes(col = Day, position = position_dodge())) +
xlab("Hashtag") +
ylab("Proportion of tweets") +
theme(axis.text.x = element_text(angle = -45, hjust = -.05))
alldays_most$Day <- as.factor(alldays_most$Day)
ggplot(alldays_most, aes(hashtags, prop_tweets)) +
geom_col(aes(col = Day, position = position_dodge())) +
xlab("Hashtag") +
ylab("Proportion of tweets") +
theme(axis.text.x = element_text(angle = -45, hjust = -.05))
ggplot(alldays_most, aes(hashtags, prop_tweets)) +
geom_col(aes(col = Day), position = "dodge") +
xlab("Hashtag") +
ylab("Proportion of tweets") +
theme(axis.text.x = element_text(angle = -45, hjust = -.05))
View(alldays_most)
## let's focus at the hashtags that appear across the most days
alldays_most <- alldays_most %>%
group_by(hashtags) %>%
mutate(n_days = n())
View(alldays_most)
alldays_most <- rbind(firstday_most2, secondday_most2, thirdday_most2, fourthday_most2, fifthday_most2, sixthday_most2, seventhday_most2)
alldays_most$Day <- as.factor(alldays_most$Day)
## let's focus at the hashtags that appear across the most days
alldays_ndays <- alldays_most %>%
group_by(hashtags) %>%
summarise(n_days = n())
View(alldays_ndays)
alldays_ndays[alldays_ndays$n_days >= 2,]
###
alldays_ndays <- alldays_ndays %>%
arrange(desc(n_days))
## let's focus at the hashtags that appear across the most days
### how many days does each hashtag appear in?
alldays_ndays <- alldays_most %>%
group_by(hashtags) %>%
summarise(n_days = n())
###
alldays_ndays <- alldays_ndays %>%
arrange(desc(n_days))
View(alldays_ndays)
alldays_ndays <- alldays_ndays[1:10, ]
View(alldays_ndays)
### use only these hashtags for the graph
alldays_top <- left_join(alldays_ndays, alldays_most)
View(alldays_top)
ggplot(alldays_top, aes(hashtags, prop_tweets)) +
geom_col(aes(col = Day), position = "dodge") +
xlab("Hashtag") +
ylab("Proportion of tweets") +
theme(axis.text.x = element_text(angle = -45, hjust = -.05))
library(lubridate)
View(freq_lang_most)
View(freq_date)
View(freq_lang)
View(freq_lang_most)
freq_lang_most$n_tweets[freq_lang_most$language == "Polish"]
head(unique(data$place_full_name))
sum(is.na(data$place_full_name))
sum(data$place_full_name == "")
loc <- data %>%
### lots of users turn off location data, so let's remove the blank locations
filter(data$place_full_name != "") %>%
count(place_full_name, sort = TRUE)
view(loc)
head(loc)
View(loc)
table(freq_user$n_tweets)
View(loc)
ggplot(firstday_most, aes(hashtags, prop_tweets)) +
geom_col() +
xlab("Hashtag") +
ylab("Proportion of tweets") +
theme(axis.text.x = element_text(angle = -45, hjust = -.05)) +
ggtitle("First day after interview")
ggplot(alldays_top, aes(hashtags, prop_tweets)) +
geom_col(aes(col = Day, fil = Day), position = "dodge") +
xlab("Hashtag") +
ylab("Proportion of tweets") +
theme(axis.text.x = element_text(angle = -45, hjust = -.05))
ggplot(alldays_top, aes(hashtags, prop_tweets)) +
geom_col(aes(col = Day, fill = Day), position = "dodge") +
xlab("Hashtag") +
ylab("Proportion of tweets") +
theme(axis.text.x = element_text(angle = -45, hjust = -.05))
ggplot(alldays_top, aes(hashtags, prop_tweets)) +
geom_col(aes(col = Day, fill = Day, width = 1), position = "dodge") +
xlab("Hashtag") +
ylab("Proportion of tweets") +
theme(axis.text.x = element_text(angle = -45, hjust = -.05))
ggplot(alldays_top, aes(hashtags, prop_tweets)) +
geom_col(aes(col = Day, fill = Day), width = 1), position = "dodge") +
xlab("Hashtag") +
ylab("Proportion of tweets") +
theme(axis.text.x = element_text(angle = -45, hjust = -.05))
ggplot(alldays_top, aes(hashtags, prop_tweets)) +
geom_col(aes(col = Day, fill = Day), width = 1, position = "dodge") +
xlab("Hashtag") +
ylab("Proportion of tweets") +
theme(axis.text.x = element_text(angle = -45, hjust = -.05))
ggplot(alldays_top, aes(hashtags, prop_tweets)) +
geom_col(aes(col = Day, fill = Day), width = 0.5, position = "dodge") +
xlab("Hashtag") +
ylab("Proportion of tweets") +
theme(axis.text.x = element_text(angle = -45, hjust = -.05))
ggplot(alldays_top, aes(hashtags, prop_tweets)) +
geom_col(aes(col = Day, fill = Day), width = 0.2, position = "dodge") +
xlab("Hashtag") +
ylab("Proportion of tweets") +
theme(axis.text.x = element_text(angle = -45, hjust = -.05))
ggplot(alldays_top, aes(hashtags, prop_tweets)) +
geom_col(aes(col = Day, fill = Day), width = 0.2, position = position_dodge(0.5)) +
xlab("Hashtag") +
ylab("Proportion of tweets") +
theme(axis.text.x = element_text(angle = -45, hjust = -.05))
ggplot(alldays_top, aes(hashtags, prop_tweets)) +
geom_col(aes(col = Day, fill = Day), position = "dodge") +
xlab("Hashtag") +
ylab("Proportion of tweets") +
theme(axis.text.x = element_text(angle = -45, hjust = -.05))
## We can make this a bit prettier and easier to read by changing the width of the columns and leaving space for missing data (e.g. a hashtag not appearing on a day)
ggplot(alldays_top, aes(hashtags, prop_tweets)) +
geom_col(aes(col = Day, fill = Day), width = 0.2, position = position_dodge(0.5)) +
xlab("Hashtag") +
ylab("Proportion of tweets") +
theme(axis.text.x = element_text(angle = -45, hjust = -.05))
View(alldays_top)
alldays_top_complete <- alldays_top %>%
complete(hashtags, day, fill = 0)
alldays_top_complete <- complete(alldays_top, nesting(hashtags, day), fill = 0)
alldays_top_complete <- complete(alldays_top, nesting(alldays_top$hashtags, alldays_top$day), fill = 0)
alldays_top_complete <- complete(alldays_top, nesting(hashtags, Day), fill = 0)
alldays_top_complete <- complete(alldays_top, nesting(hashtags, Day))
View(alldays_top_complete)
View(alldays_top)
alldays_top_complete <- complete(alldays_top, nesting(Day, hashtags))
View(alldays_top_complete)
alldays_top_complete <- complete(alldays_top, crossing(Day, hashtags))
View(alldays_top_complete)
View(alldays_top)
length(unique(alldays_top$hashtags))
alldays_top_complete <- complete(alldays_top, Day, hashtags)
alldays_top_complete <- complete(alldays_top, Day, hashtags)
View(alldays_top_complete)
View(alldays_ndays)
View(alldays_top)
## To improve this even further, let's leaving space for missing data (e.g. when a hashtag is not used on a day)
## To do this, we need to make implicitly missing data, explicit. In other words, we need to make sure there are rows for each hashtag on each day -- even days that the hashtag is not used. We will give these a proportion of 0 on those days.
alldays_top <- as.data.fram(alldays_top)
## To improve this even further, let's leaving space for missing data (e.g. when a hashtag is not used on a day)
## To do this, we need to make implicitly missing data, explicit. In other words, we need to make sure there are rows for each hashtag on each day -- even days that the hashtag is not used. We will give these a proportion of 0 on those days.
alldays_top <- as.data.frame(alldays_top)
alldays_top_complete <- complete(alldays_top, Day, hashtags)
complete(alldays_top, Day, hashtags)
View(alldays_top)
alldays_top_complete <- complete(alldays_top, Day, hashtags, fill = list(prop_tweets = 0))
View(alldays_top_complete)
alldays_top_complete <- complete(alldays_top, Day = 1:7, hashtags, fill = list(prop_tweets = 0))
alldays_top_complete <- complete(alldays_top, hashtags, Day = 1:7, fill = list(prop_tweets = 0))
alldays_top %>%
fill_gaps(prop_tweets = 0)
alldays_top[, c(1,3,5)]
alldays_top[, c(1,3,5)] %>%
complete(hashtags, Day)
what <- alldays_top[, c(1,3,5)] %>%
complete(hashtags, Day)
length(unique(what$hashtags))
alldays_top %>%
complete(hashtags, Day)
unique(alldays_top$Day)
unique(alldays_top$hashtags)
## To improve this even further, let's leaving space for missing data (e.g. when a hashtag is not used on a day)
## To do this, we need to make implicitly missing data, explicit. In other words, we need to make sure there are rows for each hashtag on each day -- even days that the hashtag is not used. We will give these a proportion of 0 on those days.
alldays_top$hashtags <- as.factor(alldays_top$hashtags)
unique(alldays_top$hashtags)
## To improve this even further, let's leaving space for missing data (e.g. when a hashtag is not used on a day)
## To do this, we need to make implicitly missing data, explicit. In other words, we need to make sure there are rows for each hashtag on each day -- even days that the hashtag is not used. We will give these a proportion of 0 on those days.
alldays_top$hashtags <- as.character(alldays_top$hashtags)
alldays_top %>%
complete(hashtags, Day)
alldays_top %>%
complete(hashtags, Day, fill = list(prop_tweets = 0))
alldays_top_complete <- alldays_top %>%
complete(hashtags, Day, fill = list(prop_tweets = 0))
ggplot(alldays_top_complete, aes(hashtags, prop_tweets)) +
geom_col(aes(col = Day, fill = Day), width = 0.2, position = position_dodge(0.5)) +
xlab("Hashtag") +
ylab("Proportion of tweets") +
theme(axis.text.x = element_text(angle = -45, hjust = -.05))
ggplot(alldays_top_complete, aes(hashtags, prop_tweets)) +
geom_col(aes(col = Day, fill = Day), width = 0.5, position = position_dodge(0.7)) +
xlab("Hashtag") +
ylab("Proportion of tweets") +
theme(axis.text.x = element_text(angle = -45, hjust = -.05))
alldays_top_complete$Day <- as.numeric(alldays_top_complete$Day)
ggplot(alldays_top_complete, aes(hashtags, prop_tweets)) +
geom_col(aes(col = Day, fill = Day), width = 0.5, position = position_dodge(0.7)) +
xlab("Hashtag") +
ylab("Proportion of tweets") +
theme(axis.text.x = element_text(angle = -45, hjust = -.05))
alldays_top_complete <- alldays_top %>%
complete(hashtags, Day, fill = list(prop_tweets = 0))
ggplot(alldays_top_complete, aes(hashtags, prop_tweets)) +
geom_col(aes(col = Day, fill = color), width = 0.5, position = position_dodge(0.7)) +
xlab("Hashtag") +
ylab("Proportion of tweets") +
theme(axis.text.x = element_text(angle = -45, hjust = -.05))
## I'm also going to change the colors of the Day by creating a column for a blue that changes opacity across the days
alldays_top_complete %>% alldays_top_complete %>%
mutate(color = "blue")
ggplot(alldays_top_complete, aes(hashtags, prop_tweets)) +
geom_col(aes(col = Day, fill = color), width = 0.5, position = position_dodge(0.7)) +
xlab("Hashtag") +
ylab("Proportion of tweets") +
theme(axis.text.x = element_text(angle = -45, hjust = -.05))
## I'm also going to change the colors of the Day by creating a column for a blue that changes opacity across the days
alldays_top_complete <- alldays_top_complete %>%
mutate(color = "blue")
ggplot(alldays_top_complete, aes(hashtags, prop_tweets)) +
geom_col(aes(col = Day, fill = color), width = 0.5, position = position_dodge(0.7)) +
xlab("Hashtag") +
ylab("Proportion of tweets") +
theme(axis.text.x = element_text(angle = -45, hjust = -.05))
ggplot(alldays_top_complete, aes(hashtags, prop_tweets)) +
geom_col(aes(col = Day), width = 0.5, position = position_dodge(0.7)) +
xlab("Hashtag") +
ylab("Proportion of tweets") +
theme(axis.text.x = element_text(angle = -45, hjust = -.05))
ggplot(alldays_top_complete, aes(hashtags, prop_tweets)) +
geom_col(aes(col = Day), color = color width = 0.5, position = position_dodge(0.7)) +
xlab("Hashtag") +
ylab("Proportion of tweets") +
theme(axis.text.x = element_text(angle = -45, hjust = -.05))
ggplot(alldays_top_complete, aes(hashtags, prop_tweets)) +
geom_col(aes(col = Day), color = color, width = 0.5, position = position_dodge(0.7)) +
xlab("Hashtag") +
ylab("Proportion of tweets") +
theme(axis.text.x = element_text(angle = -45, hjust = -.05))
ggplot(alldays_top_complete, aes(hashtags, prop_tweets)) +
geom_col(aes(col = Day), col = color, width = 0.5, position = position_dodge(0.7)) +
xlab("Hashtag") +
ylab("Proportion of tweets") +
theme(axis.text.x = element_text(angle = -45, hjust = -.05))
ggplot(alldays_top_complete, aes(hashtags, prop_tweets)) +
geom_col(aes(col = Day), fill = color, width = 0.5, position = position_dodge(0.7)) +
xlab("Hashtag") +
ylab("Proportion of tweets") +
theme(axis.text.x = element_text(angle = -45, hjust = -.05))
alldays_top_complete
ggplot(alldays_top_complete, aes(hashtags, prop_tweets)) +
geom_col(aes(col = Day), fill = "blue", width = 0.5, position = position_dodge(0.7)) +
xlab("Hashtag") +
ylab("Proportion of tweets") +
theme(axis.text.x = element_text(angle = -45, hjust = -.05))
ggplot(alldays_top_complete, aes(hashtags, prop_tweets)) +
geom_col(aes(group = Day, col = "blue"), fill = "blue", width = 0.5, position = position_dodge(0.7)) +
xlab("Hashtag") +
ylab("Proportion of tweets") +
theme(axis.text.x = element_text(angle = -45, hjust = -.05))
ggplot(alldays_top_complete, aes(hashtags, prop_tweets)) +
geom_col(aes(group = Day, col = color), fill = "blue", width = 0.5, position = position_dodge(0.7)) +
xlab("Hashtag") +
ylab("Proportion of tweets") +
theme(axis.text.x = element_text(angle = -45, hjust = -.05))
ggplot(alldays_top_complete, aes(hashtags, prop_tweets)) +
geom_col(aes(group = Day, colour = "blue", fill = "blue", alpha = Day), width = 0.5, position = position_dodge(0.7)) +
xlab("Hashtag") +
ylab("Proportion of tweets") +
theme(axis.text.x = element_text(angle = -45, hjust = -.05))
ggplot(alldays_top_complete, aes(Day, prop_tweets)) +
geom_col(aes(group = Day, alpha = Day), width = 0.5, position = position_dodge(0.7)) +
xlab("Hashtag") +
ylab("Proportion of tweets") +
facet_wrap(hashtags)
ggplot(alldays_top_complete, aes(Day, prop_tweets)) +
geom_col(aes(group = Day), width = 0.5, position = position_dodge(0.7)) +
xlab("Hashtag") +
ylab("Proportion of tweets") +
facet_wrap(hashtags)
View(alldays_top_complete)
ggplot(alldays_top_complete, aes(Day, prop_tweets)) +
geom_col(aes(group = Day), width = 0.5, position = position_dodge(0.7)) +
xlab("Hashtag") +
ylab("Proportion of tweets") +
facet_wrap(as.factor(hashtags))
unique(alldays_top_complete$hashtags)
hashtags <- c(unique(alldays_top_complete$hashtags))
alldays_top_complete$hashtags <- factor(alldays_top_complete$hashtags, levels = hashtags)
unique(alldays_top_complete$hashtags)
ggplot(alldays_top_complete, aes(Day, prop_tweets)) +
geom_col(aes(group = Day), width = 0.5, position = position_dodge(0.7)) +
xlab("Hashtag") +
ylab("Proportion of tweets") +
facet_wrap(hashtags)
ggplot(alldays_top_complete, aes(Day, prop_tweets)) +
geom_col(aes(group = Day), width = 0.5, position = position_dodge(0.7)) +
xlab("Hashtag") +
ylab("Proportion of tweets")
ggplot(alldays_top_complete, aes(Day, prop_tweets)) +
geom_col(width = 0.5, position = position_dodge(0.7)) +
xlab("Hashtag") +
ylab("Proportion of tweets") +
facet_wrap(hashtags)
View(alldays_top_complete)
ggplot(alldays_top_complete, aes(Day, prop_tweets)) +
geom_col(width = 0.5, position = position_dodge(0.7)) +
ylab("Proportion of tweets") +
facet_wrap(hashtags)
View(alldays_top_complete)
rm(hashtags)
ggplot(alldays_top_complete, aes(Day, prop_tweets)) +
geom_col(width = 0.5, position = position_dodge(0.7)) +
ylab("Proportion of tweets") +
facet_wrap(hashtags)
ggplot(alldays_top_complete, aes(Day, prop_tweets)) +
geom_col(width = 0.5, position = position_dodge(0.7)) +
ylab("Proportion of tweets") +
facet_wrap(alldays_top_complete$hashtags)
ggplot(alldays_top, aes(Day, prop_tweets)) +
geom_col(width = 0.5, position = position_dodge(0.7)) +
ylab("Proportion of tweets") +
facet_wrap(alldays_top_complete$hashtags)
ggplot(alldays_top, aes(Day, prop_tweets)) +
geom_col(width = 0.5, position = position_dodge(0.7)) +
ylab("Proportion of tweets") +
facet_wrap(alldays_top$hashtags)
View(alldays_top)
### use only these hashtags for the graph
alldays_top <- left_join(alldays_ndays, alldays_most)
ggplot(alldays_top, aes(hashtags, prop_tweets)) +
geom_col(aes(col = Day, fill = Day), position = "dodge") +
xlab("Hashtag") +
ylab("Proportion of tweets") +
theme(axis.text.x = element_text(angle = -45, hjust = -.05))
## We can make this a bit prettier and easier to read by changing the width of the columns
ggplot(alldays_top, aes(hashtags, prop_tweets)) +
geom_col(aes(col = Day, fill = Day), width = 0.2, position = position_dodge(0.5)) +
xlab("Hashtag") +
ylab("Proportion of tweets") +
theme(axis.text.x = element_text(angle = -45, hjust = -.05))
ggplot(alldays_top, aes(Day, prop_tweets)) +
geom_col(width = 0.5, position = position_dodge(0.7)) +
ylab("Proportion of tweets") +
facet_wrap(alldays_top$hashtags)
ggplot(alldays_top, aes(Day, prop_tweets)) +
geom_col(width = 0.5, position = position_dodge(0.7)) +
ylab("Proportion of tweets") +
facet_wrap(alldays_top$hashtags)
